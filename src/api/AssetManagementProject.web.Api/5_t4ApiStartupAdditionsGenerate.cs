

 
 
 
// —————————————— 
// <auto-generated> 
//	This code was auto-generated 07/11/2024 15:39:20 
//  T4 template produces Startup additions
//	NOTE:T4 generated code may need additional updates/addjustments by developer in order to compile a solution.
// <auto-generated> 
// —————————————–
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;
using Microsoft.EntityFrameworkCore;
using System.Text;
using Microsoft.IdentityModel.Tokens;
using Microsoft.AspNetCore.Authentication.JwtBearer;
using AssetManagementProject.web.Api;
using AssetManagementProject.web.Entity.UnitofWork;
using AssetManagementProject.web.Entity.Context;
using AssetManagementProject.web.Entity.Repository;
using AutoMapper;
using AssetManagementProject.web.Domain.Mapping;
using AssetManagementProject.web.Domain.Service;
using System.Net;
using Microsoft.AspNetCore.Diagnostics;
using Microsoft.AspNetCore.Http;
using Serilog;
using Swashbuckle.AspNetCore.Swagger;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json.Serialization;
using Microsoft.OpenApi.Models;
using Microsoft.AspNetCore.Mvc.ApplicationModels;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Versioning;
using Microsoft.AspNetCore.Mvc.ApiExplorer;


namespace AssetManagementProject.web.Api
{

    public partial class Startup
    {
	     // Register new services to DI
        partial void SetAdditionalDIServices(IServiceCollection services)
        {
			services.AddTransient(typeof(AssetService<,>), typeof(AssetService<,>));
            services.AddTransient(typeof(AssetServiceAsync<,>), typeof(AssetServiceAsync<,>));
			services.AddTransient(typeof(CategoryService<,>), typeof(CategoryService<,>));
            services.AddTransient(typeof(CategoryServiceAsync<,>), typeof(CategoryServiceAsync<,>));
			services.AddTransient(typeof(AssetClassService<,>), typeof(AssetClassService<,>));
            services.AddTransient(typeof(AssetClassServiceAsync<,>), typeof(AssetClassServiceAsync<,>));
			services.AddTransient(typeof(AssetMaintenanceService<,>), typeof(AssetMaintenanceService<,>));
            services.AddTransient(typeof(AssetMaintenanceServiceAsync<,>), typeof(AssetMaintenanceServiceAsync<,>));
		}
	}
}