

 
 
 
// —————————————— 
// <auto-generated> 
//	This code was auto-generated 07/11/2024 15:39:02
//     	T4 template generates service code
//	NOTE:T4 generated code may need additional updates/addjustments by developer in order to compile a solution.
// <auto-generated> 
// —————————————–
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text;
using AutoMapper;
using AssetManagementProject.web.Entity;
using AssetManagementProject.web.Entity.UnitofWork;

namespace AssetManagementProject.web.Domain.Service
{

    /// <summary>
    ///
    /// A Asset service
    ///       
    /// </summary>
    public partial class AssetService<Tv, Te> : GenericService<Tv, Te>
                                        where Tv : AssetViewModel
                                        where Te : Asset
    {
        //DI must be implemented in specific service as well beside GenericService constructor
        public AssetService(IUnitOfWork unitOfWork, IMapper mapper)
        {
            if (_unitOfWork == null)
                _unitOfWork = unitOfWork;
            if (_mapper == null)
                _mapper = mapper;
        }
        //add here any custom service method or override generic service method
    }

	/// <summary>
    /// A Asset service
    /// </summary>
    public partial class AssetServiceAsync<Tv, Te> : GenericServiceAsync<Tv, Te>
                                        where Tv : AssetViewModel
                                        where Te : Asset
    {
        //DI must be implemented in specific service as well beside GenericService constructor
        public AssetServiceAsync(IUnitOfWork unitOfWork, IMapper mapper)
        {
            if (_unitOfWork == null)
                _unitOfWork = unitOfWork;
            if (_mapper == null)
                _mapper = mapper;
        }
        //add here any custom service method or override generic service method
    }

    /// <summary>
    ///
    /// A Category service
    ///       
    /// </summary>
    public partial class CategoryService<Tv, Te> : GenericService<Tv, Te>
                                        where Tv : CategoryViewModel
                                        where Te : Category
    {
        //DI must be implemented in specific service as well beside GenericService constructor
        public CategoryService(IUnitOfWork unitOfWork, IMapper mapper)
        {
            if (_unitOfWork == null)
                _unitOfWork = unitOfWork;
            if (_mapper == null)
                _mapper = mapper;
        }
        //add here any custom service method or override generic service method
    }

	/// <summary>
    /// A Category service
    /// </summary>
    public partial class CategoryServiceAsync<Tv, Te> : GenericServiceAsync<Tv, Te>
                                        where Tv : CategoryViewModel
                                        where Te : Category
    {
        //DI must be implemented in specific service as well beside GenericService constructor
        public CategoryServiceAsync(IUnitOfWork unitOfWork, IMapper mapper)
        {
            if (_unitOfWork == null)
                _unitOfWork = unitOfWork;
            if (_mapper == null)
                _mapper = mapper;
        }
        //add here any custom service method or override generic service method
    }

    /// <summary>
    ///
    /// A AssetClass service
    ///       
    /// </summary>
    public partial class AssetClassService<Tv, Te> : GenericService<Tv, Te>
                                        where Tv : AssetClassViewModel
                                        where Te : AssetClass
    {
        //DI must be implemented in specific service as well beside GenericService constructor
        public AssetClassService(IUnitOfWork unitOfWork, IMapper mapper)
        {
            if (_unitOfWork == null)
                _unitOfWork = unitOfWork;
            if (_mapper == null)
                _mapper = mapper;
        }
        //add here any custom service method or override generic service method
    }

	/// <summary>
    /// A AssetClass service
    /// </summary>
    public partial class AssetClassServiceAsync<Tv, Te> : GenericServiceAsync<Tv, Te>
                                        where Tv : AssetClassViewModel
                                        where Te : AssetClass
    {
        //DI must be implemented in specific service as well beside GenericService constructor
        public AssetClassServiceAsync(IUnitOfWork unitOfWork, IMapper mapper)
        {
            if (_unitOfWork == null)
                _unitOfWork = unitOfWork;
            if (_mapper == null)
                _mapper = mapper;
        }
        //add here any custom service method or override generic service method
    }

    /// <summary>
    ///
    /// A AssetMaintenance service
    ///       
    /// </summary>
    public partial class AssetMaintenanceService<Tv, Te> : GenericService<Tv, Te>
                                        where Tv : AssetMaintenanceViewModel
                                        where Te : AssetMaintenance
    {
        //DI must be implemented in specific service as well beside GenericService constructor
        public AssetMaintenanceService(IUnitOfWork unitOfWork, IMapper mapper)
        {
            if (_unitOfWork == null)
                _unitOfWork = unitOfWork;
            if (_mapper == null)
                _mapper = mapper;
        }
        //add here any custom service method or override generic service method
    }

	/// <summary>
    /// A AssetMaintenance service
    /// </summary>
    public partial class AssetMaintenanceServiceAsync<Tv, Te> : GenericServiceAsync<Tv, Te>
                                        where Tv : AssetMaintenanceViewModel
                                        where Te : AssetMaintenance
    {
        //DI must be implemented in specific service as well beside GenericService constructor
        public AssetMaintenanceServiceAsync(IUnitOfWork unitOfWork, IMapper mapper)
        {
            if (_unitOfWork == null)
                _unitOfWork = unitOfWork;
            if (_mapper == null)
                _mapper = mapper;
        }
        //add here any custom service method or override generic service method
    }
}